{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","setTitle","titleError","setTitleError","setUserId","userIdError","setUserIdError","action","method","onSubmit","event","newTodos","preventDefault","trim","Math","max","prev","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.571282cc.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import User from '../Type/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todos } from '../Type/Todos';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todos;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    title,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        cn('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todos } from '../Type/Todos';\n\ntype Props = {\n  todos: Todos[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todos } from './components/Type/Todos';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const todosWithUser: Todos[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todos[]>(todosWithUser);\n\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const addTodos = (newTodos: Todos) => {\n    setTodos(prev => [...prev, newTodos]);\n  };\n\n  const handlerTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handlerUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  const handlerAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (title.trim() && userId) {\n      addTodos({\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      });\n      setTitle('');\n      setUserId(0);\n    }\n\n    setTitleError(!title.trim());\n    setUserIdError(!userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handlerAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handlerTitleChange}\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handlerUserIdChange}\n          >\n            <option\n              disabled\n              value={0}\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {userIdError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}